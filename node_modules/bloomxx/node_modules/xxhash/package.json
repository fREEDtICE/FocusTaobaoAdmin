{
  "name": "xxhash",
  "version": "0.2.0",
  "author": {
    "name": "Brian White",
    "email": "mscdex@mscdex.net"
  },
  "description": "An xxhash binding for node.js",
  "main": "./lib/xxhash",
  "engines": {
    "node": ">=0.6.0"
  },
  "keywords": [
    "hash",
    "xxhash",
    "fast",
    "streaming"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/mscdex/node-xxhash/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/mscdex/node-xxhash.git"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "\nDescription\n===========\n\nAn [xxhash](http://code.google.com/p/xxhash/) binding for [node.js](http://nodejs.org/).\n\n\nRequirements\n============\n\n* [node.js](http://nodejs.org/) -- v0.6.0 or newer\n\n\nInstall\n============\n\n    npm install xxhash\n\n\nExamples\n========\n\n* Hash a file in one step:\n\n```javascript\nvar XXHash = require('xxhash'),\n    fs = require('fs');\n\nvar file = fs.readFileSync('somefile'),\n    result = XXHash.hash(file, 0xCAFEBABE);\n```\n\n* Hash a file in steps:\n\n```javascript\nvar XXHash = require('xxhash'),\n    fs = require('fs');\n\nvar hasher = new XXHash(0xCAFEBABE);\n\nfs.createReadStream('somefile')\n  .on('data', function(data) {\n    hasher.update(data);\n  })\n  .on('end', function() {\n    console.log('Hash value = ' + hasher.digest());\n  });\n```\n\n\nAPI\n===\n\nXXHash Static Methods\n---------------------\n\n* **hash**(< _Buffer_ >data, < _integer_ >seed) - _integer_ - Performs a single/one-time hash of `data` with the given `seed`. The resulting hash is returned.\n\n\nXXHash Methods\n--------------\n\n* **(constructor)**(< _Integer_ >seed) - Create and return a new Hash instance that uses the given `seed`.\n\n* **update**(< _Buffer_ >data) - _(void)_ - Update the hash using `data`. Note: the length of `data` must be a positive signed integer (e.g. 0 to 2,147,483,647 bytes).\n\n* **digest**()  - _integer_ - Completes the hashing and returns the resulting integer hash. Note: hash object can not be used after digest() method been called.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mscdex/node-xxhash/issues"
  },
  "homepage": "https://github.com/mscdex/node-xxhash",
  "_id": "xxhash@0.2.0",
  "dist": {
    "shasum": "8cd548d05ccf49f22e77d6c71a11c90feb1bc95c"
  },
  "_from": "xxhash@*",
  "_resolved": "http://r.cnpmjs.org/xxhash/download/xxhash-0.2.0.tgz"
}
