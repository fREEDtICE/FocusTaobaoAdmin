var mongoose = require('mongoose'),
    Schema = mongoose.Schema,
    ObjectId = Schema.Types.ObjectId,
    Mixed = Schema.Types.Mixed;

var validator = require("validator"),
    _ = require("lodash");

var Roles = require('./Admin').Roles;

var AuthTableSchema = new Schema({
    role: {type: String, unique: true, required: true},
    authInfo: [
        {
            url: {type: String, required: true},
            method: {type: String, required: true, default: "get"}
        }
    ]
});

AuthTableSchema.path('role').validate(function (v) {
    return _.contains(Roles, v);
}, "invalid role");


var AuthTable = mongoose.model('AuthTable', AuthTableSchema);

exports = module.exports = {
    "schema": AuthTableSchema,
    "model": AuthTable
};

//exports.model = AuthTable;
//exports.schema = AuthTableSchema;

//AuthTable.path('authInfo.method').validate(function (v) {
//    return typeof v === 'string' && /get|post/i.test(v.toLowerCase());
//}, "invalid auth method");
//
//AuthTable.path('authInfos.url').validate(function (v) {
//    return validator.isURL(v);
//}, "invalid url");