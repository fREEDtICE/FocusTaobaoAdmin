var mongoose = require('mongoose'),
    _ = require('lodash');

var SystemConfig = mongoose.model('SystemConfig');

function SystemConfigManager() {
    this.init();
};

SystemConfigManager.prototype.init = function () {
    var _me = this;
    _me.configs = {};
    SystemConfig.find(null, function (err, data) {
        if (err) {

        } else {
            _.forEach(data, function (item) {
                _me.configs[item.name] = {
                    item: item,
                    changed: false
                };
            });
        }
    });
};


SystemConfigManager.prototype.save = function () {
    var _me = this;
    _.forIn(_me.configs, function (v, k) {
        if (v.changed) {
            v.item.save(function (err) {
                v.changed = !!err;
            });
        }
    });
};

SystemConfigManager.prototype.newConfig = function (name, type, value) {

};

SystemConfigManager.prototype.delConfig = function (name, type, value) {

};

SystemConfigManager.prototype.modConfig = function (name, type, value) {

};

SystemConfigManager.prototype.allConfigs = function () {
};


exports = module.exports = new SystemConfigManager();